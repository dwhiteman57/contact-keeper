{"ast":null,"code":"import _slicedToArray from \"/Users/danwhiteman/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danwhiteman/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 1,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }]\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n  //Delete contact\n  //Set Current contact\n  //Clear current contact\n  //Update contact\n  //Filter contacts\n  //Clear filter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/danwhiteman/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,cAFV;AAGIC,MAAAA,KAAK,EAAE,gBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,gBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,KAAK,EAAE,iBAHX;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM;AADO,GAArB;;AAD0B,sBA2BAnB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CA3BV;AAAA;AAAA,QA2BnBO,KA3BmB;AAAA,QA2BZC,QA3BY,oBA8B1B;AAMA;AAMA;AAMA;AAMA;AAMA;AAMA;;;AAMA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHP,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AADb,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIMF,KAAK,CAACU,QAJZ,CADJ;AAWH,CAnFD;;AAsFA,eAAeX,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { \n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id: 1,\n                name: 'Jill Johnson',\n                email: 'jill@gmail.com',\n                phone: '111-111-1111',\n                type: 'personal'\n            },\n            {\n                id: 2,\n                name: 'Sara Watson',\n                email: 'sara@gmail.com',\n                phone: '222-222-2222',\n                type: 'personal'\n            },\n            {\n                id: 1,\n                name: 'Harry White',\n                email: 'harry@gmail.com',\n                phone: '333-333-3333',\n                type: 'professional'\n            }\n        ]\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n\n    //Add Contact\n\n\n\n\n\n    //Delete contact\n\n\n\n\n\n    //Set Current contact\n\n\n\n\n\n    //Clear current contact\n\n\n\n\n\n    //Update contact\n\n\n\n\n\n    //Filter contacts\n\n\n\n\n\n    //Clear filter\n\n\n\n\n\n    return (\n        <ContactContext.Provider\n        value={{\n            contacts: state.contacts\n        }}>\n            { props.children }\n        </ContactContext.Provider>\n    )\n\n\n\n};\n\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}