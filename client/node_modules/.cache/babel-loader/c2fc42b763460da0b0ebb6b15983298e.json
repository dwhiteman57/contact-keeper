{"ast":null,"code":"import _defineProperty from \"/Users/danwhiteman/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/danwhiteman/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","map","contact","id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":";;;;;;AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,aATJ,EAUIC,cAVJ,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,YAAL;AACI,+BACOU,KADP;AAEIG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFrB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKd,WAAL;AACI,+BACOS,KADP;AAEIG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFd;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKV,cAAL;AACI,+BACOK,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAlF,CAFd;AAGIF,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKb,cAAL;AACI,+BACOQ,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAFd;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,cAAL;AACI,+BACOC,KADP;AAEIG,QAAAA,QAAQ,EAAE,IAFd;AAGIO,QAAAA,QAAQ,EAAE,IAHd;AAIIC,QAAAA,KAAK,EAAE,IAJX;AAKIC,QAAAA,OAAO,EAAE;AALb;;AAOJ,SAAKnB,WAAL;AACI,+BACOO,KADP;AAEIY,QAAAA,OAAO,EAAEX,MAAM,CAACG;AAFpB;;AAIJ,SAAKV,aAAL;AACI,+BACOM,KADP;AAEIY,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKhB,eAAL;AACI,+BACOI,KADP;AAEIU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAI;AACvC,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,WAAcb,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFd;;AAOJ,SAAKhB,YAAL;AACI,+BACOG,KADP;AAEIU,QAAAA,QAAQ,EAAE;AAFd;;AAIJ,SAAKZ,aAAL;AACI,+BACOE,KADP;AAEIW,QAAAA,KAAK,EAAEV,MAAM,CAACG;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AA9DR;AAgEH,CAjED","sourcesContent":["import { \n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    CLEAR_CONTACTS\n} from '../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false\n            };\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n                loading: false\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\n                loading: false\n            };\n        case CLEAR_CONTACTS:\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            };\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}